@using FunTrophy.Shared.Model

<div class="cs-container">
    <div class="cs-select" onclick="@(() => ToggleColorSelection())" style="background-color: @(CurrentColor == null ? "white" : CurrentColor.Code)"></div>
    @if (isOpen)
    {
        <div class="cs-list">
            @if (Colors is not null)
            {
                @foreach (var color in Colors)
                {
                    <div class="cs-item" onclick="@(() => SelectColor(color))" style="background-color:@color.Code">
                        <div class="cs-item-overlay"></div>
                    </div>
                }
            }
        </div>
    }
</div>


@code {
    private bool isOpen { get; set; }

    private ColorDto? CurrentColor { get; set; }

    private List<ColorDto>? _colors = new List<ColorDto>();
    [Parameter]
    public List<ColorDto>? Colors
    {
        get => _colors;
        set
        {
            if (value == _colors)
                return;
            _colors = value;
            if (_colors?.Any() == true)
                CurrentColor = _colors.First();
        }
    }

    [Parameter]
    public EventCallback<int> OnCurrentColorChanged { get; set; }

    private void SelectColor(ColorDto color)
    {
        CurrentColor = color;
        isOpen = false;
        OnCurrentColorChanged.InvokeAsync(color.Id);
        StateHasChanged();
    }

    private void ToggleColorSelection()
    {
        isOpen = !isOpen;
    }
}
